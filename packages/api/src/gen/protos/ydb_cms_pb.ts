// @generated by protoc-gen-es v2.6.0 with parameter "target=ts,import_extension=js"
// @generated from file protos/ydb_cms.proto (package Ydb.Cms, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv2";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv2";
import type { Operation, OperationParams } from "./ydb_operation_pb.js";
import { file_protos_ydb_operation } from "./ydb_operation_pb.js";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file protos/ydb_cms.proto.
 */
export const file_protos_ydb_cms: GenFile = /*@__PURE__*/
  fileDesc("ChRwcm90b3MveWRiX2Ntcy5wcm90bxIHWWRiLkNtcyIwCgxTdG9yYWdlVW5pdHMSEQoJdW5pdF9raW5kGAEgASgJEg0KBWNvdW50GAIgASgEIlEKEkNvbXB1dGF0aW9uYWxVbml0cxIRCgl1bml0X2tpbmQYASABKAkSGQoRYXZhaWxhYmlsaXR5X3pvbmUYAiABKAkSDQoFY291bnQYAyABKAQiSwoaQWxsb2NhdGVkQ29tcHV0YXRpb25hbFVuaXQSDAoEaG9zdBgBIAEoCRIMCgRwb3J0GAIgASgNEhEKCXVuaXRfa2luZBgDIAEoCSJzCglSZXNvdXJjZXMSLAoNc3RvcmFnZV91bml0cxgBIAMoCzIVLllkYi5DbXMuU3RvcmFnZVVuaXRzEjgKE2NvbXB1dGF0aW9uYWxfdW5pdHMYAiADKAsyGy5ZZGIuQ21zLkNvbXB1dGF0aW9uYWxVbml0cyIzChNTZXJ2ZXJsZXNzUmVzb3VyY2VzEhwKFHNoYXJlZF9kYXRhYmFzZV9wYXRoGAEgASgJImoKD0RhdGFiYXNlT3B0aW9ucxIaChJkaXNhYmxlX3R4X3NlcnZpY2UYASABKAgSIgoaZGlzYWJsZV9leHRlcm5hbF9zdWJkb21haW4YAiABKAgSFwoPcGxhbl9yZXNvbHV0aW9uGAMgASgNIpwBChVTY2hlbWFPcGVyYXRpb25RdW90YXMSRwoTbGVha3lfYnVja2V0X3F1b3RhcxgBIAMoCzIqLllkYi5DbXMuU2NoZW1hT3BlcmF0aW9uUXVvdGFzLkxlYWt5QnVja2V0GjoKC0xlYWt5QnVja2V0EhMKC2J1Y2tldF9zaXplGAEgASgBEhYKDmJ1Y2tldF9zZWNvbmRzGAIgASgEIsABCg5EYXRhYmFzZVF1b3RhcxIcChRkYXRhX3NpemVfaGFyZF9xdW90YRgBIAEoBBIcChRkYXRhX3NpemVfc29mdF9xdW90YRgCIAEoBBIgChhkYXRhX3N0cmVhbV9zaGFyZHNfcXVvdGEYAyABKAQSKgoiZGF0YV9zdHJlYW1fcmVzZXJ2ZWRfc3RvcmFnZV9xdW90YRgFIAEoBBIkChx0dGxfbWluX3J1bl9pbnRlcm5hbF9zZWNvbmRzGAQgASgNIrcEChVDcmVhdGVEYXRhYmFzZVJlcXVlc3QSOQoQb3BlcmF0aW9uX3BhcmFtcxgBIAEoCzIfLllkYi5PcGVyYXRpb25zLk9wZXJhdGlvblBhcmFtcxIMCgRwYXRoGAIgASgJEicKCXJlc291cmNlcxgDIAEoCzISLllkYi5DbXMuUmVzb3VyY2VzSAASLgoQc2hhcmVkX3Jlc291cmNlcxgGIAEoCzISLllkYi5DbXMuUmVzb3VyY2VzSAASPAoUc2VydmVybGVzc19yZXNvdXJjZXMYByABKAsyHC5ZZGIuQ21zLlNlcnZlcmxlc3NSZXNvdXJjZXNIABIpCgdvcHRpb25zGAQgASgLMhguWWRiLkNtcy5EYXRhYmFzZU9wdGlvbnMSQgoKYXR0cmlidXRlcxgFIAMoCzIuLllkYi5DbXMuQ3JlYXRlRGF0YWJhc2VSZXF1ZXN0LkF0dHJpYnV0ZXNFbnRyeRI/ChdzY2hlbWFfb3BlcmF0aW9uX3F1b3RhcxgIIAEoCzIeLllkYi5DbXMuU2NoZW1hT3BlcmF0aW9uUXVvdGFzEhcKD2lkZW1wb3RlbmN5X2tleRgJIAEoCRIwCg9kYXRhYmFzZV9xdW90YXMYCiABKAsyFy5ZZGIuQ21zLkRhdGFiYXNlUXVvdGFzGjEKD0F0dHJpYnV0ZXNFbnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAk6AjgBQhAKDnJlc291cmNlc19raW5kIkYKFkNyZWF0ZURhdGFiYXNlUmVzcG9uc2USLAoJb3BlcmF0aW9uGAEgASgLMhkuWWRiLk9wZXJhdGlvbnMuT3BlcmF0aW9uImMKGEdldERhdGFiYXNlU3RhdHVzUmVxdWVzdBIMCgRwYXRoGAEgASgJEjkKEG9wZXJhdGlvbl9wYXJhbXMYAiABKAsyHy5ZZGIuT3BlcmF0aW9ucy5PcGVyYXRpb25QYXJhbXMiSQoZR2V0RGF0YWJhc2VTdGF0dXNSZXNwb25zZRIsCglvcGVyYXRpb24YASABKAsyGS5ZZGIuT3BlcmF0aW9ucy5PcGVyYXRpb24ihQUKF0dldERhdGFiYXNlU3RhdHVzUmVzdWx0EgwKBHBhdGgYASABKAkSNQoFc3RhdGUYAiABKA4yJi5ZZGIuQ21zLkdldERhdGFiYXNlU3RhdHVzUmVzdWx0LlN0YXRlEjAKEnJlcXVpcmVkX3Jlc291cmNlcxgDIAEoCzISLllkYi5DbXMuUmVzb3VyY2VzSAASNwoZcmVxdWlyZWRfc2hhcmVkX3Jlc291cmNlcxgHIAEoCzISLllkYi5DbXMuUmVzb3VyY2VzSAASPAoUc2VydmVybGVzc19yZXNvdXJjZXMYCCABKAsyHC5ZZGIuQ21zLlNlcnZlcmxlc3NSZXNvdXJjZXNIABIvChNhbGxvY2F0ZWRfcmVzb3VyY2VzGAQgASgLMhIuWWRiLkNtcy5SZXNvdXJjZXMSQQoUcmVnaXN0ZXJlZF9yZXNvdXJjZXMYBSADKAsyIy5ZZGIuQ21zLkFsbG9jYXRlZENvbXB1dGF0aW9uYWxVbml0EhIKCmdlbmVyYXRpb24YBiABKAQSPwoXc2NoZW1hX29wZXJhdGlvbl9xdW90YXMYCSABKAsyHi5ZZGIuQ21zLlNjaGVtYU9wZXJhdGlvblF1b3RhcxIwCg9kYXRhYmFzZV9xdW90YXMYCiABKAsyFy5ZZGIuQ21zLkRhdGFiYXNlUXVvdGFzIm8KBVN0YXRlEhUKEVNUQVRFX1VOU1BFQ0lGSUVEEAASDAoIQ1JFQVRJTkcQARILCgdSVU5OSU5HEAISDAoIUkVNT1ZJTkcQAxIVChFQRU5ESU5HX1JFU09VUkNFUxAEEg8KC0NPTkZJR1VSSU5HEAVCEAoOcmVzb3VyY2VzX2tpbmQi3QUKFEFsdGVyRGF0YWJhc2VSZXF1ZXN0EgwKBHBhdGgYASABKAkSPwoaY29tcHV0YXRpb25hbF91bml0c190b19hZGQYAiADKAsyGy5ZZGIuQ21zLkNvbXB1dGF0aW9uYWxVbml0cxJCCh1jb21wdXRhdGlvbmFsX3VuaXRzX3RvX3JlbW92ZRgDIAMoCzIbLllkYi5DbXMuQ29tcHV0YXRpb25hbFVuaXRzEjMKFHN0b3JhZ2VfdW5pdHNfdG9fYWRkGAQgAygLMhUuWWRiLkNtcy5TdG9yYWdlVW5pdHMSTAofY29tcHV0YXRpb25hbF91bml0c190b19yZWdpc3RlchgFIAMoCzIjLllkYi5DbXMuQWxsb2NhdGVkQ29tcHV0YXRpb25hbFVuaXQSTgohY29tcHV0YXRpb25hbF91bml0c190b19kZXJlZ2lzdGVyGAYgAygLMiMuWWRiLkNtcy5BbGxvY2F0ZWRDb21wdXRhdGlvbmFsVW5pdBI5ChBvcGVyYXRpb25fcGFyYW1zGAcgASgLMh8uWWRiLk9wZXJhdGlvbnMuT3BlcmF0aW9uUGFyYW1zEhIKCmdlbmVyYXRpb24YCCABKAQSPwoXc2NoZW1hX29wZXJhdGlvbl9xdW90YXMYCSABKAsyHi5ZZGIuQ21zLlNjaGVtYU9wZXJhdGlvblF1b3RhcxIXCg9pZGVtcG90ZW5jeV9rZXkYCiABKAkSMAoPZGF0YWJhc2VfcXVvdGFzGAsgASgLMhcuWWRiLkNtcy5EYXRhYmFzZVF1b3RhcxJMChBhbHRlcl9hdHRyaWJ1dGVzGAwgAygLMjIuWWRiLkNtcy5BbHRlckRhdGFiYXNlUmVxdWVzdC5BbHRlckF0dHJpYnV0ZXNFbnRyeRo2ChRBbHRlckF0dHJpYnV0ZXNFbnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAk6AjgBIkUKFUFsdGVyRGF0YWJhc2VSZXNwb25zZRIsCglvcGVyYXRpb24YASABKAsyGS5ZZGIuT3BlcmF0aW9ucy5PcGVyYXRpb24iUQoUTGlzdERhdGFiYXNlc1JlcXVlc3QSOQoQb3BlcmF0aW9uX3BhcmFtcxgBIAEoCzIfLllkYi5PcGVyYXRpb25zLk9wZXJhdGlvblBhcmFtcyJFChVMaXN0RGF0YWJhc2VzUmVzcG9uc2USLAoJb3BlcmF0aW9uGAEgASgLMhkuWWRiLk9wZXJhdGlvbnMuT3BlcmF0aW9uIiQKE0xpc3REYXRhYmFzZXNSZXN1bHQSDQoFcGF0aHMYASADKAkiYAoVUmVtb3ZlRGF0YWJhc2VSZXF1ZXN0EgwKBHBhdGgYASABKAkSOQoQb3BlcmF0aW9uX3BhcmFtcxgCIAEoCzIfLllkYi5PcGVyYXRpb25zLk9wZXJhdGlvblBhcmFtcyJGChZSZW1vdmVEYXRhYmFzZVJlc3BvbnNlEiwKCW9wZXJhdGlvbhgBIAEoCzIZLllkYi5PcGVyYXRpb25zLk9wZXJhdGlvbiKSAQoWU3RvcmFnZVVuaXREZXNjcmlwdGlvbhIMCgRraW5kGAEgASgJEjsKBmxhYmVscxgCIAMoCzIrLllkYi5DbXMuU3RvcmFnZVVuaXREZXNjcmlwdGlvbi5MYWJlbHNFbnRyeRotCgtMYWJlbHNFbnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAk6AjgBIpwBChtBdmFpbGFiaWxpdHlab25lRGVzY3JpcHRpb24SDAoEbmFtZRgBIAEoCRJACgZsYWJlbHMYAiADKAsyMC5ZZGIuQ21zLkF2YWlsYWJpbGl0eVpvbmVEZXNjcmlwdGlvbi5MYWJlbHNFbnRyeRotCgtMYWJlbHNFbnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAk6AjgBIsIBChxDb21wdXRhdGlvbmFsVW5pdERlc2NyaXB0aW9uEgwKBGtpbmQYASABKAkSQQoGbGFiZWxzGAIgAygLMjEuWWRiLkNtcy5Db21wdXRhdGlvbmFsVW5pdERlc2NyaXB0aW9uLkxhYmVsc0VudHJ5EiIKGmFsbG93ZWRfYXZhaWxhYmlsaXR5X3pvbmVzGAMgAygJGi0KC0xhYmVsc0VudHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEoCToCOAEiWwoeRGVzY3JpYmVEYXRhYmFzZU9wdGlvbnNSZXF1ZXN0EjkKEG9wZXJhdGlvbl9wYXJhbXMYASABKAsyHy5ZZGIuT3BlcmF0aW9ucy5PcGVyYXRpb25QYXJhbXMiTwofRGVzY3JpYmVEYXRhYmFzZU9wdGlvbnNSZXNwb25zZRIsCglvcGVyYXRpb24YASABKAsyGS5ZZGIuT3BlcmF0aW9ucy5PcGVyYXRpb24i3QEKHURlc2NyaWJlRGF0YWJhc2VPcHRpb25zUmVzdWx0EjYKDXN0b3JhZ2VfdW5pdHMYASADKAsyHy5ZZGIuQ21zLlN0b3JhZ2VVbml0RGVzY3JpcHRpb24SQAoSYXZhaWxhYmlsaXR5X3pvbmVzGAIgAygLMiQuWWRiLkNtcy5BdmFpbGFiaWxpdHlab25lRGVzY3JpcHRpb24SQgoTY29tcHV0YXRpb25hbF91bml0cxgDIAMoCzIlLllkYi5DbXMuQ29tcHV0YXRpb25hbFVuaXREZXNjcmlwdGlvbkJPChJ0ZWNoLnlkYi5wcm90by5jbXNaNmdpdGh1Yi5jb20veWRiLXBsYXRmb3JtL3lkYi1nby1nZW5wcm90by9wcm90b3MvWWRiX0Ntc/gBAWIGcHJvdG8z", [file_protos_ydb_operation]);

/**
 * A set of uniform storage units.
 * Single storage unit can be thought of as a reserved part of a RAID.
 *
 * @generated from message Ydb.Cms.StorageUnits
 */
export type StorageUnits = Message<"Ydb.Cms.StorageUnits"> & {
  /**
   * Required. Kind of the storage unit. Determine guarantees
   * for all main unit parameters: used hard disk type, capacity
   * throughput, IOPS etc.
   *
   * @generated from field: string unit_kind = 1;
   */
  unitKind: string;

  /**
   * Required. The number of units in this set.
   *
   * @generated from field: uint64 count = 2;
   */
  count: bigint;
};

/**
 * Describes the message Ydb.Cms.StorageUnits.
 * Use `create(StorageUnitsSchema)` to create a new message.
 */
export const StorageUnitsSchema: GenMessage<StorageUnits> = /*@__PURE__*/
  messageDesc(file_protos_ydb_cms, 0);

/**
 * A set of uniform computational units.
 *
 * @generated from message Ydb.Cms.ComputationalUnits
 */
export type ComputationalUnits = Message<"Ydb.Cms.ComputationalUnits"> & {
  /**
   * Required. Kind of the computational unit. Determine main
   * unit parameters like available memory, CPU, etc.
   *
   * @generated from field: string unit_kind = 1;
   */
  unitKind: string;

  /**
   * The availability zone all unit should be located in.
   * By default any availability zone can be used.
   *
   * @generated from field: string availability_zone = 2;
   */
  availabilityZone: string;

  /**
   * Required. The number of units in this set.
   *
   * @generated from field: uint64 count = 3;
   */
  count: bigint;
};

/**
 * Describes the message Ydb.Cms.ComputationalUnits.
 * Use `create(ComputationalUnitsSchema)` to create a new message.
 */
export const ComputationalUnitsSchema: GenMessage<ComputationalUnits> = /*@__PURE__*/
  messageDesc(file_protos_ydb_cms, 1);

/**
 * Computational unit allocated for database. Used to register
 * externally allocated computational resources in CMS.
 *
 * @generated from message Ydb.Cms.AllocatedComputationalUnit
 */
export type AllocatedComputationalUnit = Message<"Ydb.Cms.AllocatedComputationalUnit"> & {
  /**
   * Required. Computational unit host name.
   *
   * @generated from field: string host = 1;
   */
  host: string;

  /**
   * Required. Computational unit port.
   *
   * @generated from field: uint32 port = 2;
   */
  port: number;

  /**
   * Required. Computational unit kind.
   *
   * @generated from field: string unit_kind = 3;
   */
  unitKind: string;
};

/**
 * Describes the message Ydb.Cms.AllocatedComputationalUnit.
 * Use `create(AllocatedComputationalUnitSchema)` to create a new message.
 */
export const AllocatedComputationalUnitSchema: GenMessage<AllocatedComputationalUnit> = /*@__PURE__*/
  messageDesc(file_protos_ydb_cms, 2);

/**
 * A set of computational and storage resources.
 *
 * @generated from message Ydb.Cms.Resources
 */
export type Resources = Message<"Ydb.Cms.Resources"> & {
  /**
   * Storage resources.
   *
   * @generated from field: repeated Ydb.Cms.StorageUnits storage_units = 1;
   */
  storageUnits: StorageUnits[];

  /**
   * Computational resources.
   *
   * @generated from field: repeated Ydb.Cms.ComputationalUnits computational_units = 2;
   */
  computationalUnits: ComputationalUnits[];
};

/**
 * Describes the message Ydb.Cms.Resources.
 * Use `create(ResourcesSchema)` to create a new message.
 */
export const ResourcesSchema: GenMessage<Resources> = /*@__PURE__*/
  messageDesc(file_protos_ydb_cms, 3);

/**
 * @generated from message Ydb.Cms.ServerlessResources
 */
export type ServerlessResources = Message<"Ydb.Cms.ServerlessResources"> & {
  /**
   * Full path to shared database's home dir whose resources will be used.
   *
   * @generated from field: string shared_database_path = 1;
   */
  sharedDatabasePath: string;
};

/**
 * Describes the message Ydb.Cms.ServerlessResources.
 * Use `create(ServerlessResourcesSchema)` to create a new message.
 */
export const ServerlessResourcesSchema: GenMessage<ServerlessResources> = /*@__PURE__*/
  messageDesc(file_protos_ydb_cms, 4);

/**
 * @generated from message Ydb.Cms.DatabaseOptions
 */
export type DatabaseOptions = Message<"Ydb.Cms.DatabaseOptions"> & {
  /**
   * Do not initialize services required for transactions processing.
   *
   * @generated from field: bool disable_tx_service = 1;
   */
  disableTxService: boolean;

  /**
   * Old-style database, do not create external schemeshard for database
   *
   * @generated from field: bool disable_external_subdomain = 2;
   */
  disableExternalSubdomain: boolean;

  /**
   * Transaction plan resolution in milliseconds
   *
   * @generated from field: uint32 plan_resolution = 3;
   */
  planResolution: number;
};

/**
 * Describes the message Ydb.Cms.DatabaseOptions.
 * Use `create(DatabaseOptionsSchema)` to create a new message.
 */
export const DatabaseOptionsSchema: GenMessage<DatabaseOptions> = /*@__PURE__*/
  messageDesc(file_protos_ydb_cms, 5);

/**
 * A set of quotas for schema operations
 *
 * @generated from message Ydb.Cms.SchemaOperationQuotas
 */
export type SchemaOperationQuotas = Message<"Ydb.Cms.SchemaOperationQuotas"> & {
  /**
   * Leaky bucket based quotas
   *
   * @generated from field: repeated Ydb.Cms.SchemaOperationQuotas.LeakyBucket leaky_bucket_quotas = 1;
   */
  leakyBucketQuotas: SchemaOperationQuotas_LeakyBucket[];
};

/**
 * Describes the message Ydb.Cms.SchemaOperationQuotas.
 * Use `create(SchemaOperationQuotasSchema)` to create a new message.
 */
export const SchemaOperationQuotasSchema: GenMessage<SchemaOperationQuotas> = /*@__PURE__*/
  messageDesc(file_protos_ydb_cms, 6);

/**
 * A single quota based on leaky bucket
 *
 * @generated from message Ydb.Cms.SchemaOperationQuotas.LeakyBucket
 */
export type SchemaOperationQuotas_LeakyBucket = Message<"Ydb.Cms.SchemaOperationQuotas.LeakyBucket"> & {
  /**
   * Bucket size, e.g. <1000> per day
   *
   * @generated from field: double bucket_size = 1;
   */
  bucketSize: number;

  /**
   * Bucket duration in seconds, e.g. 1000 per <day>
   *
   * @generated from field: uint64 bucket_seconds = 2;
   */
  bucketSeconds: bigint;
};

/**
 * Describes the message Ydb.Cms.SchemaOperationQuotas.LeakyBucket.
 * Use `create(SchemaOperationQuotas_LeakyBucketSchema)` to create a new message.
 */
export const SchemaOperationQuotas_LeakyBucketSchema: GenMessage<SchemaOperationQuotas_LeakyBucket> = /*@__PURE__*/
  messageDesc(file_protos_ydb_cms, 6, 0);

/**
 * A set of quotas for the database
 *
 * @generated from message Ydb.Cms.DatabaseQuotas
 */
export type DatabaseQuotas = Message<"Ydb.Cms.DatabaseQuotas"> & {
  /**
   * A maximum data size in bytes, new data will be rejected when exceeded
   *
   * @generated from field: uint64 data_size_hard_quota = 1;
   */
  dataSizeHardQuota: bigint;

  /**
   * An optional size in bytes (lower than data_size_hard_quota). When data
   * size becomes lower than this value new data ingestion is re-enabled
   * again. This is useful to help avoid database from rapidly entering and
   * exiting from the overloaded state.
   *
   * @generated from field: uint64 data_size_soft_quota = 2;
   */
  dataSizeSoftQuota: bigint;

  /**
   * A maximum count of shards in all data streams.
   *
   * @generated from field: uint64 data_stream_shards_quota = 3;
   */
  dataStreamShardsQuota: bigint;

  /**
   * A maximum storage that will be reserved for all data stream shards.
   *
   * @generated from field: uint64 data_stream_reserved_storage_quota = 5;
   */
  dataStreamReservedStorageQuota: bigint;

  /**
   * A minimum value of `TtlSettings.run_interval_seconds` that can be specified.
   * Default is 1800 (15 minutes).
   *
   * @generated from field: uint32 ttl_min_run_internal_seconds = 4;
   */
  ttlMinRunInternalSeconds: number;
};

/**
 * Describes the message Ydb.Cms.DatabaseQuotas.
 * Use `create(DatabaseQuotasSchema)` to create a new message.
 */
export const DatabaseQuotasSchema: GenMessage<DatabaseQuotas> = /*@__PURE__*/
  messageDesc(file_protos_ydb_cms, 7);

/**
 * Request to create a new database. For successfull creation
 * specified database shouldn't exist. At least one storage
 * unit should be requested for the database.
 *
 * @generated from message Ydb.Cms.CreateDatabaseRequest
 */
export type CreateDatabaseRequest = Message<"Ydb.Cms.CreateDatabaseRequest"> & {
  /**
   * @generated from field: Ydb.Operations.OperationParams operation_params = 1;
   */
  operationParams?: OperationParams;

  /**
   * Required. Full path to database's home dir. Used as database ID.
   *
   * @generated from field: string path = 2;
   */
  path: string;

  /**
   * @generated from oneof Ydb.Cms.CreateDatabaseRequest.resources_kind
   */
  resourcesKind: {
    /**
     * Resources to allocate for database by CMS.
     *
     * @generated from field: Ydb.Cms.Resources resources = 3;
     */
    value: Resources;
    case: "resources";
  } | {
    /**
     * Shared resources can be used by serverless databases.
     *
     * @generated from field: Ydb.Cms.Resources shared_resources = 6;
     */
    value: Resources;
    case: "sharedResources";
  } | {
    /**
     * If specified, the created database will be "serverless".
     *
     * @generated from field: Ydb.Cms.ServerlessResources serverless_resources = 7;
     */
    value: ServerlessResources;
    case: "serverlessResources";
  } | { case: undefined; value?: undefined };

  /**
   * Additional database options.
   *
   * @generated from field: Ydb.Cms.DatabaseOptions options = 4;
   */
  options?: DatabaseOptions;

  /**
   * Attach attributes to database.
   *
   * @generated from field: map<string, string> attributes = 5;
   */
  attributes: { [key: string]: string };

  /**
   * Optional quotas for schema operations
   *
   * @generated from field: Ydb.Cms.SchemaOperationQuotas schema_operation_quotas = 8;
   */
  schemaOperationQuotas?: SchemaOperationQuotas;

  /**
   * Optional idempotency key
   *
   * @generated from field: string idempotency_key = 9;
   */
  idempotencyKey: string;

  /**
   * Optional quotas for the database
   *
   * @generated from field: Ydb.Cms.DatabaseQuotas database_quotas = 10;
   */
  databaseQuotas?: DatabaseQuotas;
};

/**
 * Describes the message Ydb.Cms.CreateDatabaseRequest.
 * Use `create(CreateDatabaseRequestSchema)` to create a new message.
 */
export const CreateDatabaseRequestSchema: GenMessage<CreateDatabaseRequest> = /*@__PURE__*/
  messageDesc(file_protos_ydb_cms, 8);

/**
 * @generated from message Ydb.Cms.CreateDatabaseResponse
 */
export type CreateDatabaseResponse = Message<"Ydb.Cms.CreateDatabaseResponse"> & {
  /**
   * @generated from field: Ydb.Operations.Operation operation = 1;
   */
  operation?: Operation;
};

/**
 * Describes the message Ydb.Cms.CreateDatabaseResponse.
 * Use `create(CreateDatabaseResponseSchema)` to create a new message.
 */
export const CreateDatabaseResponseSchema: GenMessage<CreateDatabaseResponse> = /*@__PURE__*/
  messageDesc(file_protos_ydb_cms, 9);

/**
 * Get current database status.
 *
 * @generated from message Ydb.Cms.GetDatabaseStatusRequest
 */
export type GetDatabaseStatusRequest = Message<"Ydb.Cms.GetDatabaseStatusRequest"> & {
  /**
   * Required. Full path to database's home dir.
   *
   * @generated from field: string path = 1;
   */
  path: string;

  /**
   * Operation parameters
   *
   * @generated from field: Ydb.Operations.OperationParams operation_params = 2;
   */
  operationParams?: OperationParams;
};

/**
 * Describes the message Ydb.Cms.GetDatabaseStatusRequest.
 * Use `create(GetDatabaseStatusRequestSchema)` to create a new message.
 */
export const GetDatabaseStatusRequestSchema: GenMessage<GetDatabaseStatusRequest> = /*@__PURE__*/
  messageDesc(file_protos_ydb_cms, 10);

/**
 * @generated from message Ydb.Cms.GetDatabaseStatusResponse
 */
export type GetDatabaseStatusResponse = Message<"Ydb.Cms.GetDatabaseStatusResponse"> & {
  /**
   * operation.result holds GetDatabaseStatusResult
   *
   * @generated from field: Ydb.Operations.Operation operation = 1;
   */
  operation?: Operation;
};

/**
 * Describes the message Ydb.Cms.GetDatabaseStatusResponse.
 * Use `create(GetDatabaseStatusResponseSchema)` to create a new message.
 */
export const GetDatabaseStatusResponseSchema: GenMessage<GetDatabaseStatusResponse> = /*@__PURE__*/
  messageDesc(file_protos_ydb_cms, 11);

/**
 * @generated from message Ydb.Cms.GetDatabaseStatusResult
 */
export type GetDatabaseStatusResult = Message<"Ydb.Cms.GetDatabaseStatusResult"> & {
  /**
   * Full path to database's home dir.
   *
   * @generated from field: string path = 1;
   */
  path: string;

  /**
   * Current database state.
   *
   * @generated from field: Ydb.Cms.GetDatabaseStatusResult.State state = 2;
   */
  state: GetDatabaseStatusResult_State;

  /**
   * @generated from oneof Ydb.Cms.GetDatabaseStatusResult.resources_kind
   */
  resourcesKind: {
    /**
     * Database resources requested for allocation.
     *
     * @generated from field: Ydb.Cms.Resources required_resources = 3;
     */
    value: Resources;
    case: "requiredResources";
  } | {
    /**
     * @generated from field: Ydb.Cms.Resources required_shared_resources = 7;
     */
    value: Resources;
    case: "requiredSharedResources";
  } | {
    /**
     * @generated from field: Ydb.Cms.ServerlessResources serverless_resources = 8;
     */
    value: ServerlessResources;
    case: "serverlessResources";
  } | { case: undefined; value?: undefined };

  /**
   * Database resources allocated by CMS.
   *
   * @generated from field: Ydb.Cms.Resources allocated_resources = 4;
   */
  allocatedResources?: Resources;

  /**
   * Externally allocated database resources registered in CMS.
   *
   * @generated from field: repeated Ydb.Cms.AllocatedComputationalUnit registered_resources = 5;
   */
  registeredResources: AllocatedComputationalUnit[];

  /**
   * Current database generation. Incremented at each successful
   * alter request.
   *
   * @generated from field: uint64 generation = 6;
   */
  generation: bigint;

  /**
   * Current quotas for schema operations
   *
   * @generated from field: Ydb.Cms.SchemaOperationQuotas schema_operation_quotas = 9;
   */
  schemaOperationQuotas?: SchemaOperationQuotas;

  /**
   * Current quotas for the database
   *
   * @generated from field: Ydb.Cms.DatabaseQuotas database_quotas = 10;
   */
  databaseQuotas?: DatabaseQuotas;
};

/**
 * Describes the message Ydb.Cms.GetDatabaseStatusResult.
 * Use `create(GetDatabaseStatusResultSchema)` to create a new message.
 */
export const GetDatabaseStatusResultSchema: GenMessage<GetDatabaseStatusResult> = /*@__PURE__*/
  messageDesc(file_protos_ydb_cms, 12);

/**
 * @generated from enum Ydb.Cms.GetDatabaseStatusResult.State
 */
export enum GetDatabaseStatusResult_State {
  /**
   * @generated from enum value: STATE_UNSPECIFIED = 0;
   */
  STATE_UNSPECIFIED = 0,

  /**
   * @generated from enum value: CREATING = 1;
   */
  CREATING = 1,

  /**
   * @generated from enum value: RUNNING = 2;
   */
  RUNNING = 2,

  /**
   * @generated from enum value: REMOVING = 3;
   */
  REMOVING = 3,

  /**
   * @generated from enum value: PENDING_RESOURCES = 4;
   */
  PENDING_RESOURCES = 4,

  /**
   * @generated from enum value: CONFIGURING = 5;
   */
  CONFIGURING = 5,
}

/**
 * Describes the enum Ydb.Cms.GetDatabaseStatusResult.State.
 */
export const GetDatabaseStatusResult_StateSchema: GenEnum<GetDatabaseStatusResult_State> = /*@__PURE__*/
  enumDesc(file_protos_ydb_cms, 12, 0);

/**
 * Change resources allocated for database.
 *
 * @generated from message Ydb.Cms.AlterDatabaseRequest
 */
export type AlterDatabaseRequest = Message<"Ydb.Cms.AlterDatabaseRequest"> & {
  /**
   * Required. Full path to database's home dir.
   *
   * @generated from field: string path = 1;
   */
  path: string;

  /**
   * Additional computational units to allocate for database.
   *
   * @generated from field: repeated Ydb.Cms.ComputationalUnits computational_units_to_add = 2;
   */
  computationalUnitsToAdd: ComputationalUnits[];

  /**
   * Computational units to deallocate.
   *
   * @generated from field: repeated Ydb.Cms.ComputationalUnits computational_units_to_remove = 3;
   */
  computationalUnitsToRemove: ComputationalUnits[];

  /**
   * Additional storage units to allocate for database.
   *
   * @generated from field: repeated Ydb.Cms.StorageUnits storage_units_to_add = 4;
   */
  storageUnitsToAdd: StorageUnits[];

  /**
   * Externally allocated computational units to register for database.
   *
   * @generated from field: repeated Ydb.Cms.AllocatedComputationalUnit computational_units_to_register = 5;
   */
  computationalUnitsToRegister: AllocatedComputationalUnit[];

  /**
   * Externally allocated computational units to deregister.
   *
   * @generated from field: repeated Ydb.Cms.AllocatedComputationalUnit computational_units_to_deregister = 6;
   */
  computationalUnitsToDeregister: AllocatedComputationalUnit[];

  /**
   * Operation parameters.
   *
   * @generated from field: Ydb.Operations.OperationParams operation_params = 7;
   */
  operationParams?: OperationParams;

  /**
   * Current generation of altered database.
   *
   * @generated from field: uint64 generation = 8;
   */
  generation: bigint;

  /**
   * Change quotas for schema operations
   *
   * @generated from field: Ydb.Cms.SchemaOperationQuotas schema_operation_quotas = 9;
   */
  schemaOperationQuotas?: SchemaOperationQuotas;

  /**
   * Optional idempotency key
   *
   * @generated from field: string idempotency_key = 10;
   */
  idempotencyKey: string;

  /**
   * Change quotas for the database
   *
   * @generated from field: Ydb.Cms.DatabaseQuotas database_quotas = 11;
   */
  databaseQuotas?: DatabaseQuotas;

  /**
   * Alter attributes. Leave the value blank to drop an attribute.
   *
   * @generated from field: map<string, string> alter_attributes = 12;
   */
  alterAttributes: { [key: string]: string };
};

/**
 * Describes the message Ydb.Cms.AlterDatabaseRequest.
 * Use `create(AlterDatabaseRequestSchema)` to create a new message.
 */
export const AlterDatabaseRequestSchema: GenMessage<AlterDatabaseRequest> = /*@__PURE__*/
  messageDesc(file_protos_ydb_cms, 13);

/**
 * @generated from message Ydb.Cms.AlterDatabaseResponse
 */
export type AlterDatabaseResponse = Message<"Ydb.Cms.AlterDatabaseResponse"> & {
  /**
   * @generated from field: Ydb.Operations.Operation operation = 1;
   */
  operation?: Operation;
};

/**
 * Describes the message Ydb.Cms.AlterDatabaseResponse.
 * Use `create(AlterDatabaseResponseSchema)` to create a new message.
 */
export const AlterDatabaseResponseSchema: GenMessage<AlterDatabaseResponse> = /*@__PURE__*/
  messageDesc(file_protos_ydb_cms, 14);

/**
 * List all databases known by CMS.
 *
 * @generated from message Ydb.Cms.ListDatabasesRequest
 */
export type ListDatabasesRequest = Message<"Ydb.Cms.ListDatabasesRequest"> & {
  /**
   * Operation parameters
   *
   * @generated from field: Ydb.Operations.OperationParams operation_params = 1;
   */
  operationParams?: OperationParams;
};

/**
 * Describes the message Ydb.Cms.ListDatabasesRequest.
 * Use `create(ListDatabasesRequestSchema)` to create a new message.
 */
export const ListDatabasesRequestSchema: GenMessage<ListDatabasesRequest> = /*@__PURE__*/
  messageDesc(file_protos_ydb_cms, 15);

/**
 * @generated from message Ydb.Cms.ListDatabasesResponse
 */
export type ListDatabasesResponse = Message<"Ydb.Cms.ListDatabasesResponse"> & {
  /**
   * operation.result holds ListDatabasesResult
   *
   * @generated from field: Ydb.Operations.Operation operation = 1;
   */
  operation?: Operation;
};

/**
 * Describes the message Ydb.Cms.ListDatabasesResponse.
 * Use `create(ListDatabasesResponseSchema)` to create a new message.
 */
export const ListDatabasesResponseSchema: GenMessage<ListDatabasesResponse> = /*@__PURE__*/
  messageDesc(file_protos_ydb_cms, 16);

/**
 * @generated from message Ydb.Cms.ListDatabasesResult
 */
export type ListDatabasesResult = Message<"Ydb.Cms.ListDatabasesResult"> & {
  /**
   * @generated from field: repeated string paths = 1;
   */
  paths: string[];
};

/**
 * Describes the message Ydb.Cms.ListDatabasesResult.
 * Use `create(ListDatabasesResultSchema)` to create a new message.
 */
export const ListDatabasesResultSchema: GenMessage<ListDatabasesResult> = /*@__PURE__*/
  messageDesc(file_protos_ydb_cms, 17);

/**
 * Completely remove database and all his data.
 *
 * @generated from message Ydb.Cms.RemoveDatabaseRequest
 */
export type RemoveDatabaseRequest = Message<"Ydb.Cms.RemoveDatabaseRequest"> & {
  /**
   * Required. Full path to database's home dir.
   *
   * @generated from field: string path = 1;
   */
  path: string;

  /**
   * @generated from field: Ydb.Operations.OperationParams operation_params = 2;
   */
  operationParams?: OperationParams;
};

/**
 * Describes the message Ydb.Cms.RemoveDatabaseRequest.
 * Use `create(RemoveDatabaseRequestSchema)` to create a new message.
 */
export const RemoveDatabaseRequestSchema: GenMessage<RemoveDatabaseRequest> = /*@__PURE__*/
  messageDesc(file_protos_ydb_cms, 18);

/**
 * @generated from message Ydb.Cms.RemoveDatabaseResponse
 */
export type RemoveDatabaseResponse = Message<"Ydb.Cms.RemoveDatabaseResponse"> & {
  /**
   * @generated from field: Ydb.Operations.Operation operation = 1;
   */
  operation?: Operation;
};

/**
 * Describes the message Ydb.Cms.RemoveDatabaseResponse.
 * Use `create(RemoveDatabaseResponseSchema)` to create a new message.
 */
export const RemoveDatabaseResponseSchema: GenMessage<RemoveDatabaseResponse> = /*@__PURE__*/
  messageDesc(file_protos_ydb_cms, 19);

/**
 * @generated from message Ydb.Cms.StorageUnitDescription
 */
export type StorageUnitDescription = Message<"Ydb.Cms.StorageUnitDescription"> & {
  /**
   * @generated from field: string kind = 1;
   */
  kind: string;

  /**
   * @generated from field: map<string, string> labels = 2;
   */
  labels: { [key: string]: string };
};

/**
 * Describes the message Ydb.Cms.StorageUnitDescription.
 * Use `create(StorageUnitDescriptionSchema)` to create a new message.
 */
export const StorageUnitDescriptionSchema: GenMessage<StorageUnitDescription> = /*@__PURE__*/
  messageDesc(file_protos_ydb_cms, 20);

/**
 * @generated from message Ydb.Cms.AvailabilityZoneDescription
 */
export type AvailabilityZoneDescription = Message<"Ydb.Cms.AvailabilityZoneDescription"> & {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: map<string, string> labels = 2;
   */
  labels: { [key: string]: string };
};

/**
 * Describes the message Ydb.Cms.AvailabilityZoneDescription.
 * Use `create(AvailabilityZoneDescriptionSchema)` to create a new message.
 */
export const AvailabilityZoneDescriptionSchema: GenMessage<AvailabilityZoneDescription> = /*@__PURE__*/
  messageDesc(file_protos_ydb_cms, 21);

/**
 * @generated from message Ydb.Cms.ComputationalUnitDescription
 */
export type ComputationalUnitDescription = Message<"Ydb.Cms.ComputationalUnitDescription"> & {
  /**
   * @generated from field: string kind = 1;
   */
  kind: string;

  /**
   * @generated from field: map<string, string> labels = 2;
   */
  labels: { [key: string]: string };

  /**
   * @generated from field: repeated string allowed_availability_zones = 3;
   */
  allowedAvailabilityZones: string[];
};

/**
 * Describes the message Ydb.Cms.ComputationalUnitDescription.
 * Use `create(ComputationalUnitDescriptionSchema)` to create a new message.
 */
export const ComputationalUnitDescriptionSchema: GenMessage<ComputationalUnitDescription> = /*@__PURE__*/
  messageDesc(file_protos_ydb_cms, 22);

/**
 * @generated from message Ydb.Cms.DescribeDatabaseOptionsRequest
 */
export type DescribeDatabaseOptionsRequest = Message<"Ydb.Cms.DescribeDatabaseOptionsRequest"> & {
  /**
   * Operation parameters
   *
   * @generated from field: Ydb.Operations.OperationParams operation_params = 1;
   */
  operationParams?: OperationParams;
};

/**
 * Describes the message Ydb.Cms.DescribeDatabaseOptionsRequest.
 * Use `create(DescribeDatabaseOptionsRequestSchema)` to create a new message.
 */
export const DescribeDatabaseOptionsRequestSchema: GenMessage<DescribeDatabaseOptionsRequest> = /*@__PURE__*/
  messageDesc(file_protos_ydb_cms, 23);

/**
 * @generated from message Ydb.Cms.DescribeDatabaseOptionsResponse
 */
export type DescribeDatabaseOptionsResponse = Message<"Ydb.Cms.DescribeDatabaseOptionsResponse"> & {
  /**
   * operation.result holds DescribeDatabaseOptionsResult
   *
   * @generated from field: Ydb.Operations.Operation operation = 1;
   */
  operation?: Operation;
};

/**
 * Describes the message Ydb.Cms.DescribeDatabaseOptionsResponse.
 * Use `create(DescribeDatabaseOptionsResponseSchema)` to create a new message.
 */
export const DescribeDatabaseOptionsResponseSchema: GenMessage<DescribeDatabaseOptionsResponse> = /*@__PURE__*/
  messageDesc(file_protos_ydb_cms, 24);

/**
 * @generated from message Ydb.Cms.DescribeDatabaseOptionsResult
 */
export type DescribeDatabaseOptionsResult = Message<"Ydb.Cms.DescribeDatabaseOptionsResult"> & {
  /**
   * @generated from field: repeated Ydb.Cms.StorageUnitDescription storage_units = 1;
   */
  storageUnits: StorageUnitDescription[];

  /**
   * @generated from field: repeated Ydb.Cms.AvailabilityZoneDescription availability_zones = 2;
   */
  availabilityZones: AvailabilityZoneDescription[];

  /**
   * @generated from field: repeated Ydb.Cms.ComputationalUnitDescription computational_units = 3;
   */
  computationalUnits: ComputationalUnitDescription[];
};

/**
 * Describes the message Ydb.Cms.DescribeDatabaseOptionsResult.
 * Use `create(DescribeDatabaseOptionsResultSchema)` to create a new message.
 */
export const DescribeDatabaseOptionsResultSchema: GenMessage<DescribeDatabaseOptionsResult> = /*@__PURE__*/
  messageDesc(file_protos_ydb_cms, 25);

