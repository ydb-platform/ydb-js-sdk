// @generated by protoc-gen-es v2.2.3 with parameter "target=ts,import_extension=js"
// @generated from file ydb_topic_v1.proto (package Ydb.Topic.V1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import type { AlterTopicRequestSchema, AlterTopicResponseSchema, CommitOffsetRequestSchema, CommitOffsetResponseSchema, CreateTopicRequestSchema, CreateTopicResponseSchema, DescribeConsumerRequestSchema, DescribeConsumerResponseSchema, DescribeTopicRequestSchema, DescribeTopicResponseSchema, DropTopicRequestSchema, DropTopicResponseSchema, StreamReadMessage_FromClientSchema, StreamReadMessage_FromServerSchema, StreamWriteMessage_FromClientSchema, StreamWriteMessage_FromServerSchema, UpdateOffsetsInTransactionRequestSchema, UpdateOffsetsInTransactionResponseSchema } from "./protos/ydb_topic_pb.js";
import { file_protos_ydb_topic } from "./protos/ydb_topic_pb.js";

/**
 * Describes the file ydb_topic_v1.proto.
 */
export const file_ydb_topic_v1: GenFile = /*@__PURE__*/
  fileDesc("ChJ5ZGJfdG9waWNfdjEucHJvdG8SDFlkYi5Ub3BpYy5WMTK3BgoMVG9waWNTZXJ2aWNlEmUKC1N0cmVhbVdyaXRlEiguWWRiLlRvcGljLlN0cmVhbVdyaXRlTWVzc2FnZS5Gcm9tQ2xpZW50GiguWWRiLlRvcGljLlN0cmVhbVdyaXRlTWVzc2FnZS5Gcm9tU2VydmVyKAEwARJiCgpTdHJlYW1SZWFkEicuWWRiLlRvcGljLlN0cmVhbVJlYWRNZXNzYWdlLkZyb21DbGllbnQaJy5ZZGIuVG9waWMuU3RyZWFtUmVhZE1lc3NhZ2UuRnJvbVNlcnZlcigBMAESTwoMQ29tbWl0T2Zmc2V0Eh4uWWRiLlRvcGljLkNvbW1pdE9mZnNldFJlcXVlc3QaHy5ZZGIuVG9waWMuQ29tbWl0T2Zmc2V0UmVzcG9uc2USeQoaVXBkYXRlT2Zmc2V0c0luVHJhbnNhY3Rpb24SLC5ZZGIuVG9waWMuVXBkYXRlT2Zmc2V0c0luVHJhbnNhY3Rpb25SZXF1ZXN0Gi0uWWRiLlRvcGljLlVwZGF0ZU9mZnNldHNJblRyYW5zYWN0aW9uUmVzcG9uc2USTAoLQ3JlYXRlVG9waWMSHS5ZZGIuVG9waWMuQ3JlYXRlVG9waWNSZXF1ZXN0Gh4uWWRiLlRvcGljLkNyZWF0ZVRvcGljUmVzcG9uc2USUgoNRGVzY3JpYmVUb3BpYxIfLllkYi5Ub3BpYy5EZXNjcmliZVRvcGljUmVxdWVzdBogLllkYi5Ub3BpYy5EZXNjcmliZVRvcGljUmVzcG9uc2USWwoQRGVzY3JpYmVDb25zdW1lchIiLllkYi5Ub3BpYy5EZXNjcmliZUNvbnN1bWVyUmVxdWVzdBojLllkYi5Ub3BpYy5EZXNjcmliZUNvbnN1bWVyUmVzcG9uc2USSQoKQWx0ZXJUb3BpYxIcLllkYi5Ub3BpYy5BbHRlclRvcGljUmVxdWVzdBodLllkYi5Ub3BpYy5BbHRlclRvcGljUmVzcG9uc2USRgoJRHJvcFRvcGljEhsuWWRiLlRvcGljLkRyb3BUb3BpY1JlcXVlc3QaHC5ZZGIuVG9waWMuRHJvcFRvcGljUmVzcG9uc2VCUgoXdGVjaC55ZGIucHJvdG8udG9waWMudjFaNGdpdGh1Yi5jb20veWRiLXBsYXRmb3JtL3lkYi1nby1nZW5wcm90by9ZZGJfVG9waWNfVjH4AQFiBnByb3RvMw", [file_protos_ydb_topic]);

/**
 * @generated from service Ydb.Topic.V1.TopicService
 */
export const TopicService: GenService<{
  /**
   * Create Write Session
   * Pipeline example:
   * client                  server
   *         InitRequest(Topic, MessageGroupID, ...)
   *        ---------------->
   *         InitResponse(Partition, MaxSeqNo, ...)
   *        <----------------
   *         WriteRequest(data1, seqNo1)
   *        ---------------->
   *         WriteRequest(data2, seqNo2)
   *        ---------------->
   *         WriteResponse(seqNo1, offset1, ...)
   *        <----------------
   *         WriteRequest(data3, seqNo3)
   *        ---------------->
   *         WriteResponse(seqNo2, offset2, ...)
   *        <----------------
   *         [something went wrong] (status != SUCCESS, issues not empty)
   *        <----------------
   *
   * @generated from rpc Ydb.Topic.V1.TopicService.StreamWrite
   */
  streamWrite: {
    methodKind: "bidi_streaming";
    input: typeof StreamWriteMessage_FromClientSchema;
    output: typeof StreamWriteMessage_FromServerSchema;
  },
  /**
   * Create Read Session
   * Pipeline:
   * client                  server
   *         InitRequest(Topics, ClientId, ...)
   *        ---------------->
   *         InitResponse(SessionId)
   *        <----------------
   *         ReadRequest
   *        ---------------->
   *         ReadRequest
   *        ---------------->
   *         StartPartitionSessionRequest(Topic1, Partition1, PartitionSessionID1, ...)
   *        <----------------
   *         StartPartitionSessionRequest(Topic2, Partition2, PartitionSessionID2, ...)
   *        <----------------
   *         StartPartitionSessionResponse(PartitionSessionID1, ...)
   *             client must respond with this message to actually start recieving data messages from this partition
   *        ---------------->
   *         StopPartitionSessionRequest(PartitionSessionID1, ...)
   *        <----------------
   *         StopPartitionSessionResponse(PartitionSessionID1, ...)
   *             only after this response server will give this parittion to other session.
   *        ---------------->
   *         StartPartitionSessionResponse(PartitionSession2, ...)
   *        ---------------->
   *         ReadResponse(data, ...)
   *        <----------------
   *         CommitRequest(PartitionCommit1, ...)
   *        ---------------->
   *         CommitResponse(PartitionCommitAck1, ...)
   *        <----------------
   *         [something went wrong] (status != SUCCESS, issues not empty)
   *        <----------------
   *
   * @generated from rpc Ydb.Topic.V1.TopicService.StreamRead
   */
  streamRead: {
    methodKind: "bidi_streaming";
    input: typeof StreamReadMessage_FromClientSchema;
    output: typeof StreamReadMessage_FromServerSchema;
  },
  /**
   * Single commit offset request.
   *
   * @generated from rpc Ydb.Topic.V1.TopicService.CommitOffset
   */
  commitOffset: {
    methodKind: "unary";
    input: typeof CommitOffsetRequestSchema;
    output: typeof CommitOffsetResponseSchema;
  },
  /**
   * Add information about offset ranges to the transaction.
   *
   * @generated from rpc Ydb.Topic.V1.TopicService.UpdateOffsetsInTransaction
   */
  updateOffsetsInTransaction: {
    methodKind: "unary";
    input: typeof UpdateOffsetsInTransactionRequestSchema;
    output: typeof UpdateOffsetsInTransactionResponseSchema;
  },
  /**
   * Create topic command.
   *
   * @generated from rpc Ydb.Topic.V1.TopicService.CreateTopic
   */
  createTopic: {
    methodKind: "unary";
    input: typeof CreateTopicRequestSchema;
    output: typeof CreateTopicResponseSchema;
  },
  /**
   * Describe topic command.
   *
   * @generated from rpc Ydb.Topic.V1.TopicService.DescribeTopic
   */
  describeTopic: {
    methodKind: "unary";
    input: typeof DescribeTopicRequestSchema;
    output: typeof DescribeTopicResponseSchema;
  },
  /**
   * Describe topic's consumer command.
   *
   * @generated from rpc Ydb.Topic.V1.TopicService.DescribeConsumer
   */
  describeConsumer: {
    methodKind: "unary";
    input: typeof DescribeConsumerRequestSchema;
    output: typeof DescribeConsumerResponseSchema;
  },
  /**
   * Alter topic command.
   *
   * @generated from rpc Ydb.Topic.V1.TopicService.AlterTopic
   */
  alterTopic: {
    methodKind: "unary";
    input: typeof AlterTopicRequestSchema;
    output: typeof AlterTopicResponseSchema;
  },
  /**
   * Drop topic command.
   *
   * @generated from rpc Ydb.Topic.V1.TopicService.DropTopic
   */
  dropTopic: {
    methodKind: "unary";
    input: typeof DropTopicRequestSchema;
    output: typeof DropTopicResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_ydb_topic_v1, 0);

